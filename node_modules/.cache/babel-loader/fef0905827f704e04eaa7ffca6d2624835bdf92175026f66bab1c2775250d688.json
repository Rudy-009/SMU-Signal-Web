{"ast":null,"code":"var _jsxFileName = \"/Users/iseungjun/Desktop/SMU Signal Web/src/utils/ThemeProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// 테마 색상 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst THEMES = {\n  light: {\n    colors: {\n      TB: '#4B67FF',\n      // 주요 테마 색상\n      TB2: '#B4CFF5',\n      // 비활성화 버튼 색상\n      TB3: '#E9F0F9',\n      // 비활성화 제출 버튼 색상\n      R400: '#FF3B30',\n      // 에러 색상\n      G300: '#ddd',\n      // 경계선 색상\n      G600: '#666',\n      // 설명 텍스트 색상\n      G200: '#eee' // 밝은 회색\n    }\n  }\n};\nconst ThemeContext = /*#__PURE__*/createContext({\n  theme: THEMES.light,\n  setTheme: () => {}\n});\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(THEMES.light);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"u2KumGI3++RbHpwQykiBJLAL81s=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context.theme;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","THEMES","light","colors","TB","TB2","TB3","R400","G300","G600","G200","ThemeContext","theme","setTheme","ThemeProvider","children","_s","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/iseungjun/Desktop/SMU Signal Web/src/utils/ThemeProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// 테마 색상 정의\nconst THEMES = {\n  light: {\n    colors: {\n      TB: '#4B67FF',    // 주요 테마 색상\n      TB2: '#B4CFF5',   // 비활성화 버튼 색상\n      TB3: '#E9F0F9',   // 비활성화 제출 버튼 색상\n      R400: '#FF3B30',  // 에러 색상\n      G300: '#ddd',     // 경계선 색상\n      G600: '#666',     // 설명 텍스트 색상\n      G200: '#eee',     // 밝은 회색\n    }\n  }\n};\n\nconst ThemeContext = createContext({\n  theme: THEMES.light,\n  setTheme: () => {},\n});\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(THEMES.light);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context.theme;\n};\n\nexport default ThemeProvider; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG;EACbC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,EAAE,EAAE,SAAS;MAAK;MAClBC,GAAG,EAAE,SAAS;MAAI;MAClBC,GAAG,EAAE,SAAS;MAAI;MAClBC,IAAI,EAAE,SAAS;MAAG;MAClBC,IAAI,EAAE,MAAM;MAAM;MAClBC,IAAI,EAAE,MAAM;MAAM;MAClBC,IAAI,EAAE,MAAM,CAAM;IACpB;EACF;AACF,CAAC;AAED,MAAMC,YAAY,gBAAGf,aAAa,CAAC;EACjCgB,KAAK,EAAEX,MAAM,CAACC,KAAK;EACnBW,QAAQ,EAAEA,CAAA,KAAM,CAAC;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACJ,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACG,MAAM,CAACC,KAAK,CAAC;EAEhD,oBACEF,OAAA,CAACW,YAAY,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEN,KAAK;MAAEC;IAAS,CAAE;IAAAE,QAAA,EAC/CA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACN,EAAA,CARWF,aAAa;AAAAS,EAAA,GAAbT,aAAa;AAU1B,OAAO,MAAMU,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAG7B,UAAU,CAACc,YAAY,CAAC;EACxC,IAAIe,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOF,OAAO,CAACd,KAAK;AACtB,CAAC;AAACa,GAAA,CANWD,QAAQ;AAQrB,eAAeV,aAAa;AAAC,IAAAS,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}